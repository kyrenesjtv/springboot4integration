# 数据库访问配置
# 主数据源，默认的
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName = com.mysql.jdbc.Driver
spring.datasource.url = jdbc:mysql://127.0.0.1:3306/demo?useUnicode=true&characterEncoding=utf-8
spring.datasource.username = root
spring.datasource.password = root

# 多环境配置文件激活属性 比如dev 它就回去加载application-dev.properties 然后回去加载里面配置的信息,比如测试环境用test,生成环境用dev
# spring.profiles.active=dev
# 端口
server.port=8080



# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize = 5
spring.datasource.minIdle = 5
spring.datasource.maxActive = 20
# 配置获取连接等待超时的时间
spring.datasource.maxWait = 60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis = 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis = 300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle = true
spring.datasource.testOnBorrow = false
spring.datasource.testOnReturn = false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements = true
spring.datasource.maxPoolPreparedStatementPerConnectionSize = 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters = stat, wall, log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties = druid.stat.mergeSql = true; druid.stat.slowSqlMillis = 5000
# 合并多个DruidDataSource的监控数据
# spring.datasource.useGlobalDataSourceStat = true
# 页面跳转
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix:.html
# 多数据源配置 test 就是会去加载application-test.propertis
#spring.profiles.active=test


# 日志
# NEVER：禁用ANSI-colored输出（默认项）
# DETECT：会检查终端是否支持ANSI，是的话就采用彩色输出（推荐项）
# ALWAYS：总是使用ANSI-colored格式输出，若终端不支持的时候，会有很多干扰信息，不推荐使用
spring.output.ansi.enabled=DETECT
#在application.properties文件中引入日志配置文件
#=====================================  log  =============================
logging.config=classpath:logback.xml


# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
# session 使用redis来保存session数据
spring.session.store-type=redis
spring.redis.database=0
# Redis服务器地址
spring.redis.host=47.96.128.195
# Redis服务器连接端口
spring.redis.port=6379
# Redis服务器连接密码（默认为空）
spring.redis.password=admin
# 连接池最大连接数（使用负值表示没有限制）
spring.redis.pool.max-total=300
# 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.pool.max-wait=1000
# 连接池中的最大空闲连接
spring.redis.pool.max-idle=300
# 连接池中的最小空闲连接
spring.redis.pool.min-idle=0
# 连接超时时间（毫秒）
spring.redis.timeout=10000
spring.redis.testOnBorrow=fasle

#开启CGLIB动态代理模式
#spring.aop.proxy-target-class=true
#advisor-auto-proxy-creator-enabled: false

#mail的设置
#邮箱
spring.mail.host=smtp.qq.com
#发送方邮箱
spring.mail.username=401442190@qq.com
#发送方的授权码(需要开启SMTP)
spring.mail.password=vbwjdnvjofjzbidh
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.ssl.enable=true
spring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
#换成公司企业邮箱报错，通过将properties文件的内容修改（下面两个改成false）就可以了，这里的用户密码就是自己的邮箱密码(这点不同于qq邮箱)
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true



#rabbitMQ的配置
#spring.application.name=spirng-boot-rabbitmq-sender
#spring.rabbitmq.host=127.0.0.1
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#如果要进行消息回调，则这里必须要设置为true
#spring.rabbitmq.publisherconfirms=true

# elasticsearch配置
#spring.elasticsearch.cluster.name=my-elasticsearch
#spring.elasticsearch.host=127.0.0.1
#spring.elasticsearch.port=9300
#spring.elasticsearch.pool=5

# fastfds配置
fdfs.soTimeout=1500
fdfs.connectTimeout=600
fdfs.thumbImage.width=150
fdfs.thumbImage.height=150
fdfs.trackerList[0]=192.168.0.201:22122
#fdfs.trackerList[1]=192.168.0.202:22122 可以配置多个

#zookper
dubbo.registry.address=localhost:2181
